/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.6                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
    default         Gauss linear;
    //grad(C)      Gauss volWeighted "Dm";
    //grad(C)      Gauss linear;
    //grad(C_ZnOH4--)      Gauss linear;
    //grad(C_OH-)      Gauss linear;
    //grad(C_K+)      Gauss linear;
    //grad(U)      Gauss linear;
    //grad(p)      Gauss linear;
    grad(phiE)      Gauss volWeighted "kappa";
    grad(C)      Gauss volWeighted "Dm";
    grad(Ci)      Gauss volWeighted "Di";
}

divSchemes
{
    default         Gauss linear;
    div(phi,U)      Gauss limitedLinearV 1;
    div((nuEff*dev(grad(U).T()))) Gauss limitedLinearV 1;
    div(U)          Gauss limitedLinearV 1;
    div(phi,C)     Gauss limitedLinear 1;
    div(zmuFEf,C)  Gauss limitedLinear 1;
}

laplacianSchemes
{
    default         Gauss linear uncorrected;
    laplacian(rAUf,p) Gauss linear uncorrected;
    laplacian(nuEff,U) Gauss linear uncorrected;
    laplacian(kappa,phiE) Gauss harmonic uncorrected;
    laplacian(zmuFC,phiE) Gauss harmonic uncorrected;
    laplacian(D,C) Gauss harmonic uncorrected;
    laplacian(Dm,C) Gauss harmonic uncorrected;
}

interpolationSchemes
{
    default         linear;
    interpolate(D)  harmonic;
    interpolate(t)  harmonic;
    interpolate(kappa)  harmonic;
}

snGradSchemes
{
    default         uncorrected;
}

fluxRequired
{
    default         no;
    p;
    phiE;
}


// ************************************************************************* //
